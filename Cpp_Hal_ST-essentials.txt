startfile [

    #include "hal_st/instantiations/NucleoTracerInfrastructure.hpp"
    #include "hal_st/instantiations/NucleoUi.hpp"
    #include "hal_st/instantiations/StmEventInfrastructure.hpp"
    #include "hal_st/stm32fxxx/DefaultClockNucleoF767ZI.hpp"

    unsigned int hse_value = 8000000;

    int main() {
        HAL_Init();

        ConfigureDefaultClockNucleo767ZI();

        static main_::StmEventInfrastructure eventInfrastructure;
        static main_::Nucleo144Ui ui;

        static hal::OutputPin ledRed(ui.ledRed);
        static hal::OutputPin ledGreen(ui.ledGreen);
        static hal::OutputPin ledBlue(ui.ledBlue);

        ledRed.Set(true);
        ledGreen.Set(true);
        ledBlue.Set(true);

        eventInfrastructure.Run();
        __builtin_unreachable();
    }
]

print things [
    static main_::NucleoF767ziTracerInfrastructure tracer;
    tracer.tracer.Trace() << "Hello World!";
]

timer [
    #include "infra/timer/Timer.hpp"
    #include <chrono>
    static infra::TimerRepeating timer(std::chrono::seconds(1), []() {
        doe iets
    })
]

button [
    static hal::InputPin button(ui.buttonOne);
    ?
]
